/*

TODO:

* why is caps_word not working?

* how to specify actions for turning the encoder on a particular layer

* how to specify bluetooth-related functionality

* how to specify underglow-related functionality

* how to illuminate the RGB LED for a specific key

* can i rearrange the layer definitions to remove the encoder and d-pad from their current positions and place them underneath? (it's confusing to have them in the middle)

*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

#define BASE 0
#define NUMERIC 1
#define NAVIGATION 2
#define FN 3
#define EXTRA 4
#define SYSTEM 5

#define HRM_TIMEOUT 400
#define TAP_TIMEOUT 50
#define CHORD_TIMEOUT 50

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10



/ {
    behaviors {
        // this is obsolete
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <HRM_TIMEOUT>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };


    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";
        
        // ESC with tab+q
        combo_esc {
            timeout-ms = <CHORD_TIMEOUT>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        // Reload with r+l
        combo_reload {
            timeout-ms = <CHORD_TIMEOUT>;
            key-positions = <4 21>;
            bindings = <&bootloader>;
        };

        // Layer switches
        combo_num {
            timeout-ms = <CHORD_TIMEOUT>;
            key-positions = <3 8>;
            bindings = <&to NUMERIC>;
        };

        combo_nav {
            timeout-ms = <CHORD_TIMEOUT>;
            key-positions = <5 6>;
            bindings = <&to NAVIGATION>;
        };

        // One-shot modifiers with dual key presses
        combo_os_ctrl {
            timeout-ms = <CHORD_TIMEOUT>;
            key-positions = <12 23>;
            bindings = <&sk LCTRL>;
        };

        combo_os_alt {
            timeout-ms = <CHORD_TIMEOUT>;
            key-positions = <14 20>;
            bindings = <&sk LALT>;
        };

        combo_os_gui {
            timeout-ms = <CHORD_TIMEOUT>;
            key-positions = <15 19>;
            bindings = <&sk LGUI>;
        };

        // Caps word with s+l
        combo_caps_word {
            timeout-ms = <CHORD_TIMEOUT>;
            key-positions = <13 21>;
            bindings = <&caps_word>;
        };

        // Base layer with space keys
        combo_base {
            timeout-ms = <CHORD_TIMEOUT>;
            key-positions = <38 39>;
            bindings = <&to BASE>;
        };

        // Print screen
        combo_print {
            timeout-ms = <CHORD_TIMEOUT>;
            key-positions = <24 25>;
            bindings = <&kp PRINTSCREEN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";
            bindings = <
&kp TAB              &kp Q        &kp W         &lt NUMERIC E     &kp R       &kp T                             &kp UP                &kp Y        &kp U       &lt NUMERIC I         &kp O         &kp P           &kp BSPC
&lt NAVIGATION CAPS  &hm LCTRL A  &hm LSHIFT S  &hm LALT D        &hm LGUI F  &kp G                   &kp LEFT  &tog SYSTEM &kp RIGHT &kp H        &hm RGUI J  &hm RALT K            &hm RSHIFT L  &hm RCTRL SEMI  &lt NAVIGATION SQT
&kp LCTRL            &kp Z        &kp X         &lt NAVIGATION C  &kp V       &kp B       &kp C_MUTE            &kp DOWN              &kp N        &kp M       &lt NAVIGATION COMMA  &kp DOT       &kp FSLH        &kp ESC
                                     &lt EXTRA ESC     &kp TAB     &kp SPACE                                               &kp SPACE    &kp BSPC    &lt FN RET
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        numeric_layer {
            display-name = "numeric";
            bindings = <
&kp GRAVE      &kp EXCL         &kp AT               &kp HASH      &kp DOLLAR &kp PERCENT                            &mmv MOVE_UP                   &kp CARET &kp AMPS      &kp ASTERISK     &kp LPAR              &kp RPAR            &kp EQUAL
&kp N0         &kp N1           &kp N2               &kp N3        &kp N4     &kp N5                  &mmv MOVE_LEFT &mkp LCLK      &mmv MOVE_RIGHT &kp N6    &kp N7        &kp N8           &kp N9                &kp N0              &kp MINUS
&kp LEFT_BRACE &kp LEFT_BRACKET &kp LEFT_PARENTHESIS &kp LESS_THAN &kp SLASH  &kp MINUS    &kp C_MUTE                &mmv MOVE_DOWN                 &kp PLUS  &kp BACKSLASH &kp GREATER_THAN &kp RIGHT_PARENTHESIS &kp RIGHT_BRACKET   &kp RIGHT_BRACE
                                                     &kp PIPE      &kp TAB    &kp SPACE                                                             &kp SPACE &kp BACKSPACE &kp PERIOD
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        navigation_layer {
            display-name = "navigation";
            bindings = <
&kp HOME  &kp PG_UP   &kp INSERT     &kp UP_ARROW   &kp DELETE      &msc SCRL_UP                           &mmv MOVE_UP                   &msc SCRL_UP    &kp DELETE     &kp UP_ARROW   &kp INSERT      &kp PG_UP   &kp HOME
&kp END   &kp PG_DN   &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &msc SCRL_DOWN          &mmv MOVE_LEFT &kp HOME      &mmv MOVE_RIGHT  &msc SCRL_DOWN  &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp PG_DN   &kp END
&trans   &trans      &trans         &trans         &trans          &trans         &kp HOME                &mmv MOVE_DOWN                 &trans            &trans         &trans         &trans          &trans      &trans
                                    &trans         &trans          &kp LEFT_ARROW                                                        &kp RIGHT_ARROW   &trans         &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_function {
            display-name = "function";
            bindings = <
&kp F1      &kp F2      &kp F3       &kp F4     &kp F5     &kp F6                               &mmv MOVE_UP                     &kp F7     &kp F8       &kp F9      &kp F10      &kp F11        &kp F12
&kp F13     &kp F14     &kp F15      &kp F16    &kp F17    &kp F18              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp F19    &kp F20      &kp F21     &kp F22      &kp F23        &kp F24
&trans  &sys_reset  &trans      &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK &kp PAUSE_BREAK
                                 &trans      &trans      &trans                                                                   &trans       &trans     &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_extra {
            display-name = "extra";
            bindings = <
&kp F1      &kp F2      &kp F3       &kp F4     &kp F5     &kp F6                               &mmv MOVE_UP                     &kp F7     &kp F8       &kp F9      &kp F10          &kp F11   &kp F12
&kp F13     &kp F14     &kp F15      &kp F16    &kp F17    &kp F18              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp F19    &kp F20      &kp F21     &kp F22     &kp F23        &kp F24
&trans  &sys_reset  &trans      &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                &trans      &trans      &trans                                                                   &trans       &trans     &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_system {
            display-name = "system";
            bindings = <
&bt BT_CLR       &bt BT_CLR_ALL  &kp F3        &kp F4        &kp F5        &kp F6                               &mmv MOVE_UP                     &kp F7     &kp F8       &kp F9      &kp F10          &kp F11   &kp F12
&bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5         &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT   &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans    &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF &kp C_MUTE                   &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN

                                 &trans      &trans      &trans                                                                   &trans       &trans     &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

     }; /* keymap */
};
